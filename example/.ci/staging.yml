apiVersion: v1
kind: Service
metadata:
  name: <PROJECT_NAME>-<BRANCH>
  namespace: team
spec:
  ports:
  - port: 80
    targetPort: 1337
  selector:
    app: <PROJECT_NAME>-<BRANCH>

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: <PROJECT_NAME>-<BRANCH>
  namespace: team
  annotations: 
    lastUpdateTime: <LAST_UPDATE_TIME>
spec:
  selector:
    matchLabels:
      app: <PROJECT_NAME>-<BRANCH>
  replicas: 1
  template:
    metadata:
      labels:
        app: <PROJECT_NAME>-<BRANCH>
    spec:
      containers:
      - name: <PROJECT_NAME>-<BRANCH>
        image: gitlab.com/<CI_PROJECT_PATH>:<BRANCH>
        imagePullPolicy: Always
        ports:
        - containerPort: 1337
        env:
        - name: NODE_ENV
          value: "development"          
        - name: VERSION
          value: "<VERSION>"
        - name: BRANCH
          value: "<BRANCH>"          
        - name: DB_MIGRATE
          value: "drop"
      # 
      imagePullSecrets:
      - name: regcred-team

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: <PROJECT_NAME>-<BRANCH>-ingress
  namespace: team
  annotations:
    kubernetes.io/ingress.class: "nginx"    
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/server-snippet: |
        gzip on;
        gzip_disable "MSIE [1-6]\.";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 1;
        gzip_min_length 512;
        gzip_buffers 16 128k;
        gzip_http_version 1.1;
        gzip_types
            application/json
            application/vnd.api+json;    
spec:
  tls:
  - hosts:
    - <PROJECT_NAME>-<BRANCH>.dev.42.pub
    secretName: <PROJECT_NAME>-<BRANCH>.dev.42.pub
  rules:
  - host: <PROJECT_NAME>-<BRANCH>.dev.42.pub
    http:
      paths:
      - backend:
          serviceName: <PROJECT_NAME>-<BRANCH>
          servicePort: 80